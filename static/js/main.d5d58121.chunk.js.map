{"version":3,"sources":["components/header.jsx","components/Card.jsx","components/CardList.jsx","components/overviewCard.jsx","components/overviewCardList.jsx","containers/App.jsx","serviceWorker.js","index.js"],"names":["Header","props","totalFollowers","light","setLight","className","locale","type","onChange","e","defaultChecked","Card","card","stock","social","userName","fansNumber","fansType","fansIncrement","fansDecrement","cardList","cards","map","key","id","OverviewCard","overviewCard","title","quantity","increment","decrement","OverviewCardList","overviewCards","App","info","data","overview","useState","body","document","querySelector","setAttribute","CardList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","Data","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d5d58121.chunk.js","sourcesContent":["import React from 'react';\nimport { Number } from 'react-intl-number-format/dist/index.js';\nimport '../assets/styles/Header.css'\n\nfunction Header(props) {\n  const {\n    totalFollowers,\n    light,\n    setLight,\n  } = props;\n\n  return (\n    <header className=\"App-header mb-4 d-lg-flex justify-content-between align-items-center container-sm\">\n      <div className=\"\">\n        <h4 className={(light)? 'text-darkBlue' : 'text-lwhite' }>\n          <strong>Social Media Dashboard</strong>\n        </h4>\n        <p className=\"text-grayishBlue\">\n          <strong className='d-flex'>Total Followers:\n            <div className=\"ml-1\"><Number locale='en-IN'>{totalFollowers}</Number></div>\n          </strong>\n        </p>\n      </div>\n      <hr className=\"bg-darkGrayishBlue\"/>\n      <div className=\"header-toggle d-flex justify-content-between\">\n        <strong className={`mr-3 ${(light)? 'text-grayishBlue' : 'text-lwhite'}`}>Dark Mode</strong>\n        <label className=\"switch\">\n          <input \n          type=\"checkbox\"\n          onChange={e => {\n            setLight(!light);\n          }}\n          defaultChecked={light}\n           />\n          <span className=\"slider round \"></span>\n        </label>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport '../assets/styles/Card.css'\n\nconst Card = (props) => {\n    const {\n        card,\n        stock,\n        light\n    } = props;\n\n    return (\n        <div className={`card col-md rounded-lg bt-${card.social} px-0 mx-3 mb-4`} >\n            <div className={`card-body d-flex flex-column align-items-center p-4 ${(light)? 'bg-paleBlue' : 'bg-desaturatedBlue'}`}>\n                <div className='d-flex align-items-center'>\n                    <i className={`icon-${card.social}`}></i>\n                    <strong className={`userName ml-2 ${(light)? 'text-grayishBlue' : 'text-darkPaleBlue'}`}> {card.userName}</strong>\n                </div>\n                <h1 className={`fansNumber ${(light)? 'text-darkBlue': 'text-lwhite'}`}><strong>{card.fansNumber}</strong></h1>\n                <p className='fansType text-uppercase text-grayishBlue'>{card.fansType}</p>\n                <div className={`${stock} d-flex align-items-center`}>\n                    <i className={`icon-${stock}`}></i>\n                    <strong className='stock-detail ml-1'>{(card.fansIncrement)? card.fansIncrement : card.fansDecrement} Today</strong>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst cardList = (props) => {\n    const {\n        cards,\n        light\n    } = props;\n\n    return (\n        <div className=\"CardList container-sm p-0\">\n            <div className=\"row\">\n                {cards.map(card => {\n                    let stock = (card.fansIncrement)? 'increment' : \n                    (card.fansDecrement) ? 'decrement' : '';\n                    return (\n                        <Card key={card.id}\n                            card={card}\n                            stock={stock}\n                            light={light}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default cardList;","import React from 'react';\nimport '../assets/styles/OverviewCard.css';\n\nconst OverviewCard = (props) => {\n    const {\n        overviewCard,\n        stock,\n        light,\n    } = props;\n\n    return (\n        <div className='card mb-3 mx-2 overviewCard p-0'>\n            <div className={`card-body d-flex flex-column justify-content-between ${(light)? 'bg-paleBlue' : 'bg-desaturatedBlue'}`}>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <strong className={`${(light)? 'text-grayishBlue' : 'text-darkPaleBlue'}`}>{overviewCard.title}</strong>\n                    <i className={`icon-${overviewCard.social}`}></i>\n                </div>\n                <div className='d-flex justify-content-between align-items-end mt-3'>\n                    <h3 className={`m-0 quantity ${(light)? 'text-darkBlue': 'text-lwhite'}`}>\n                        <strong>{overviewCard.quantity}</strong>\n                    </h3>\n                    \n                    <strong className={`mb-2 ${stock} stock-percent`}><i className={`icon-${stock}`}></i> {(overviewCard.increment)? overviewCard.increment : overviewCard.decrement}%</strong>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OverviewCard;","import React from 'react';\nimport OverviewCard from './overviewCard';\n\nconst OverviewCardList = (props) => {\n    const {\n        overviewCards,\n        light\n    } = props;\n\n    return (\n        <div className=\"overviewCardList container mt-5 p-0\">\n            <h3 className={`px-3 mb-4 ${(light)? 'text-darkBlue' : 'text-lwhite'}`}>\n                <strong>Overview - Today</strong>\n            </h3>\n            <div className=\"d-lg-flex flex-wrap justify-content-between\">\n                {overviewCards.map(overviewCard => {\n                    let stock = (overviewCard.increment)? 'increment' : \n                    (overviewCard.decrement) ? 'decrement' : '';\n                    return (\n                        <OverviewCard key={overviewCard.id}\n                            overviewCard={overviewCard}\n                            stock={stock}\n                            light={light}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default OverviewCardList;","import React, { useState } from 'react';\nimport Header from '../components/header';\nimport CardList from '../components/CardList';\nimport OverviewCardList from '../components/overviewCardList';\nimport '../assets/styles/App.css';\n\nfunction App(props) {\n  const {\n    info,\n    data,\n    overview\n  } = props;\n\n  const [light, setLight] = useState(true);\n\n  const body = document.querySelector('body');\n  (light)? body.setAttribute('class', 'bg-lwhite')\n         : body.setAttribute('class', 'bg-veryDarkBlue');\n\n  return (\n    <div className={`app container-lg mt-5 mx-4 mx-lg-auto p-0`}>\n      <Header totalFollowers={info.totalFollowers} light={light} setLight={setLight}/>\n      <CardList cards={data} light={light}/>\n      <OverviewCardList overviewCards={overview} light={light}/>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './assets/styles/index.css';\nimport App from './containers/App.jsx';\nimport Data from './assets/data.json';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App \n      info={Data.info}\n      data={Data.data}\n      overview={Data.overview}\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}